- name: Deploy Logisticks Backend and Frontend
  hosts: localhost
  # become: yes  # Ensure privileged access for Docker operations
  vars:
    backend_deployment_file: "../k8s/backend.yml"
    frontend_deployment_file: "../k8s/frontend.yml"
    mysql_deployment_file: "../k8s/mysql-deployment.yml"
    ansible_python_interpreter: "/usr/bin/python"
  tasks:
    - name: "Installing kubernetes package"
      ansible.builtin.pip:
        name: kubernetes
        extra_args: --break-system-packages
        
    - name: Remove old backend container
      docker_container:
        name: logisticks-backend
        state: absent
        force_kill: yes

    - name: Deploy Backend Service
      docker_container:
        name: logisticks-backend
        image: dhairyamagnetar/logisticks-backend
        state: started
        ports:
          - "8088:8088"  # Map backend service to host
        restart_policy: always
        detach: yes

    - name: Remove old frontend container
      docker_container:
        name: logisticks-frontend
        state: absent
        force_kill: yes

    - name: Deploy Frontend Service
      docker_container:
        name: logisticks-frontend
        image: dhairyamagnetar/logisticks-frontend
        state: started
        ports:
          - "5173:5173"  # Map frontend service to host
        restart_policy: always
        detach: yes
      
    - name: pause for 30 seconds and let DB initialize
      pause:
        seconds: 30
      
    - name: Apply MySQL Deployment
      k8s:
        state: present
        namespace: default
        src: mysql_deployment_file
      
    - name: pause for 30 seconds and let DB initialize
      pause:
        seconds: 30

    - name: Apply Backend Deployment and Service
      k8s:
        state: present
        namespace: default
        src: backend_deployment_file

    - name: Apply Frontend Deployment and Service
      k8s:
        state: present
        namespace: default
        src: frontend_deployment_file

  